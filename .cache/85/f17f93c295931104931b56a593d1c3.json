{"id":"test.html","dependencies":[{"name":"_css_loader","parent":"D:\\jirengu\\Canvas-demo\\test.html","resolved":"C:\\Users\\Administrator\\AppData\\Local\\Yarn\\Data\\global\\node_modules\\parcel\\src\\builtins\\css-loader.js"}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"zh\">\r\n \r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n        <title>Document</title>\r\n        <style>body {\r\n                background: #535353;\r\n                padding: 0;\r\n                margin: 0;\r\n            }\r\n             \r\n            canvas {\r\n                cursor: crosshair;\r\n            }\r\n             \r\n            #cur {\r\n                width: 3px;\r\n                height: 3px;\r\n                outline: 2px solid #535353;\r\n                margin-left: -1px;\r\n                margin-top: -1px;\r\n                position: absolute;\r\n            }\r\n             \r\n            .wrapper {\r\n                position: relative;\r\n            }\r\n             \r\n            #color_show {\r\n                width: 50px;\r\n                height: 50px;\r\n                background: #f00;\r\n            }\r\n             \r\n            .panel {\r\n                width: 200px;\r\n                height: 200px;\r\n                position: fixed;\r\n                top: 20px;\r\n                right: 20px;\r\n                background-color: #fff;\r\n                padding: 10px;\r\n                text-align: center;\r\n                line-height: 2em;\r\n            }</style>\r\n    </head>\r\n \r\n    <body>\r\n        <div class=\"wrapper\">\r\n            <canvas id=\"canvas\" width=\"600\" height=\"600\"></canvas>\r\n            <em id=\"cur\"></em>\r\n            <div class=\"panel\">\r\n                <div id=\"color_show\"></div>\r\n                <label>\r\n            rgb <input type=\"text\" class=\"color_input\" value=\"\" id=\"rgb_value\">\r\n        </label><br>\r\n                <label>\r\n            hex <input type=\"text\" class=\"color_input\" value=\"\" id=\"hex_value\">\r\n        </label>\r\n            </div>\r\n        </div>\r\n        <script>(function () {\n  var width = 256;\n  var can = document.getElementById('canvas');\n  var ctx = can.getContext('2d');\n  var curColor = 'rgba(255,0,0,1)';\n  var cur = document.getElementById('cur');\n  var rgbValue = document.getElementById('rgb_value');\n  var hexValue = document.getElementById('hex_value');\n  var colorShow = document.getElementById('color_show');\n  var aColorInput = document.getElementsByClassName('color_input');\n\n  function colorBar() {\n    var gradientBar = ctx.createLinearGradient(0, 0, 0, width);\n    gradientBar.addColorStop(0, '#f00');\n    gradientBar.addColorStop(1 / 6, '#f0f');\n    gradientBar.addColorStop(2 / 6, '#00f');\n    gradientBar.addColorStop(3 / 6, '#0ff');\n    gradientBar.addColorStop(4 / 6, '#0f0');\n    gradientBar.addColorStop(5 / 6, '#ff0');\n    gradientBar.addColorStop(1, '#f00');\n    ctx.fillStyle = gradientBar;\n    ctx.fillRect(0, 0, 20, width);\n  }\n\n  function rgb2hex(rgb) {\n    var aRgb = rgb instanceof Array ? rgb : rgb.split(',') || [0, 0, 0];\n    var temp;\n    return [(temp = Number(aRgb[0]).toString(16)).length == 1 ? '0' + temp : temp, (temp = Number(aRgb[1]).toString(16)).length == 1 ? '0' + temp : temp, (temp = Number(aRgb[2]).toString(16)).length == 1 ? '0' + temp : temp].join('');\n  }\n\n  function hex2rgb(hex) {\n    if (hex.length == 3) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    return [parseInt(hex[0] + hex[1], 16), parseInt(hex[2] + hex[3], 16), parseInt(hex[4] + hex[5], 16)].join();\n  }\n\n  function putCurDom(color) {\n    if (/([0-9a-f]{3}|[0-9a-f]{6})/i.test(color)) {\n      // hex\n      color = hex2rgb(color);\n    } else if (color instanceof Array) {\n      color = color.join(',');\n    } else if (/\\d{1,3}(\\,\\d{1,3}){2}/i.test(color)) {} else {\n      return;\n    }\n  }\n\n  function colorBox(color) {\n    // 底色填充，也就是（举例红色）到白色\n    var gradientBase = ctx.createLinearGradient(30, 0, width + 30, 0);\n    gradientBase.addColorStop(1, color);\n    gradientBase.addColorStop(0, 'rgba(255,255,255,1)');\n    ctx.fillStyle = gradientBase;\n    ctx.fillRect(30, 0, width, width); // 第二次填充，黑色到透明\n\n    var my_gradient1 = ctx.createLinearGradient(0, 0, 0, width);\n    my_gradient1.addColorStop(0, 'rgba(0,0,0,0)');\n    my_gradient1.addColorStop(1, 'rgba(0,0,0,1)');\n    ctx.fillStyle = my_gradient1;\n    ctx.fillRect(30, 0, width, width);\n  }\n\n  function init() {\n    colorBar();\n    colorBox(curColor);\n    bind();\n  }\n\n  function bind() {\n    can.addEventListener('click', function (e) {\n      var ePos = {\n        x: e.offsetX || e.layerX,\n        y: e.offsetY || e.layerY\n      };\n      var rgbaStr = '#000';\n\n      if (ePos.x >= 0 && ePos.x < 20 && ePos.y >= 0 && ePos.y < width) {\n        // in\n        rgbaStr = getRgbaAtPoint(ePos, 'bar');\n        colorBox('rgba(' + rgbaStr + ')');\n      } else if (ePos.x >= 30 && ePos.x < 30 + width && ePos.y >= 0 && ePos.y < width) {\n        rgbaStr = getRgbaAtPoint(ePos, 'box');\n      } else {\n        return;\n      }\n\n      outColor(rgbaStr.slice(0, 3).join());\n      cur.style.left = ePos.x + 'px';\n      cur.style.top = ePos.y + 'px';\n      cur.style.outlineColor = rgbaStr[0] > 256 / 2 || rgbaStr[1] > 256 / 2 || rgbaStr[2] > 256 / 2 ? '#000' : '#fff';\n    });\n    can.addEventListener('mousedown', function (e) {\n      var ePos = {\n        x: e.layerX || e.offsetX,\n        y: e.layerY || e.offsetY\n      };\n\n      if (ePos.x >= 30 && ePos.x < 30 + width && ePos.y >= 0 && ePos.y < width) {\n        document.onmousemove = function (e) {\n          var pos = {\n            x: e.clientX,\n            y: e.clientY\n          };\n          pos.x = pos.x < 30 ? 30 : pos.x && (pos.x > 30 + width - 1 ? 30 + width - 1 : pos.x);\n          pos.y = pos.y < 0 ? 0 : pos.y && (pos.y > width - 1 ? width - 1 : pos.y);\n          rgbaStr = getRgbaAtPoint(pos, 'box');\n          cur.style.left = pos.x + 'px';\n          cur.style.top = pos.y + 'px';\n          cur.style.outlineColor = rgbaStr[0] > 256 / 2 || rgbaStr[1] > 256 / 2 || rgbaStr[2] > 256 / 2 ? '#000' : '#fff';\n          outColor(rgbaStr.slice(0, 3).join());\n        };\n\n        document.onmouseup = function () {\n          // outColor(rgbaStr.slice(0, 3).join());\n          document.onmouseup = document.onmousemove = null;\n        };\n      }\n    });\n  }\n\n  function outColor(rgb) {\n    console.log(ctx);\n    rgbValue.value = rgb;\n    hexValue.value = rgb2hex(rgb);\n    colorShow.style.backgroundColor = 'rgb(' + rgb + ')';\n  }\n\n  function getRgbaAtPoint(pos, area) {\n    if (area == 'bar') {\n      var imgData = ctx.getImageData(0, 0, 20, width);\n    } else {\n      var imgData = ctx.getImageData(0, 0, can.width, can.height);\n    }\n\n    var data = imgData.data;\n    var dataIndex = (pos.y * imgData.width + pos.x) * 4;\n    return [data[dataIndex], data[dataIndex + 1], data[dataIndex + 2], (data[dataIndex + 3] / 255).toFixed(2)];\n  }\n\n  init();\n})();</script>\r\n    </body>\r\n \r\n</html>"},"sourceMaps":null,"error":null,"hash":"5aad60ee65be32130df8866f851fdb5c","cacheData":{"env":{}}}